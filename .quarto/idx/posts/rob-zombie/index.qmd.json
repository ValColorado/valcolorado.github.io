{"title":"Data Mining Text Mining Adventure","markdown":{"yaml":{"title":"Data Mining Text Mining Adventure","author":"Valentina Colorado, Alexandra Desaulniers","date":"2024-01-10","categories":["class","code","analysis","DMTM","R"],"image":"https://upload.wikimedia.org/wikipedia/en/8/8b/Hellbilly_Deluxe.jpg","description":"Using data mining text mining sentiment analysis to explore the emotional impact of Rob Zombie's iconic album, Hellbilly Deluxe (1998)."},"headingText":"About","containsRefs":false,"markdown":"\n\nUsing data mining text mining sentiment analysis to explore the emotional impact of Rob Zombie's iconic album, Hellbilly Deluxe (1998). This album is known for its distinctive blend of horror, metal, and industrial sounds. We try to find insights into the album's influence on listener emotions. The research underscores the power of sentiment analysis in deciphering the intricate interplay between musical elements and emotional responses, providing a comprehensive understanding of the emotional dynamics evoked by this unique musical work. It is known that music affects a human’s state of emotion, but it is important to consider the level of complexity that the emotional state could represent. \n\n## Exploratory Data Analysis\n```{r, echo=FALSE, results='hide', message=FALSE, warning=FALSE}\nlibrary(tidyverse)\nlibrary(tidytext)\nlibrary('textdata')\nlibrary(\"readxl\")\nlibrary(reshape2)\nlibrary(factoextra)\nlibrary(wordcloud)\n#devtools::install_github(\"lchiffon/wordcloud2\", force=TRUE)\nlibrary(\"wordcloud2\")\nlibrary(scales)\nlibrary(topicmodels)\nlibrary(tm)\n```\n\n```{r, warning=FALSE}\nLyrics <- read_excel(\"RobZombieSheet.xlsx\")\nhead(Lyrics)\n```\n\n```{r, warning=FALSE}\nCleanLyrics <- Lyrics %>%\n  unnest_tokens(word, lyrics, token = \"words\") %>%   \n filter(!word %in% stop_words$word, str_detect(word, \"[a-z]\"))\nhead(CleanLyrics, 10)\n```\n\n```{r, warning=FALSE}\nSent <- CleanLyrics %>%\n  inner_join(get_sentiments(\"bing\")) %>%\n count(song_name, sentiment) %>%\n spread(sentiment, n, fill = 0)%>%\n mutate(sentiment = positive - negative)\nSent\n```\n\n```{r, warning=FALSE}\nFreq <- CleanLyrics %>% group_by(word) %>% \n summarise(uses = n()) %>% \n arrange(desc(uses))\nhead(Freq)\n```\n\n```{r, warning=FALSE}\nFreq %>%\n  slice(1:20) %>%\n  ggplot() + \n geom_bar(aes(x = reorder(word, uses), y = uses), stat = \"identity\", color = 'purple', fill = 'green') +\n coord_flip() + \n labs(y = \"Frequency of use\",\n x = \"Words\") +\n theme_minimal() + \ntheme_dark() + \n  ggtitle('Frequency of Words in Rob Zombie Songs')\n\n```\n\n```{r, warning=FALSE}\nLyricCloud<- CleanLyrics%>%\n  anti_join(stop_words) %>%\n  count(word) %>%\n  with(wordcloud(word, n, color = c(\"maroon\"), max.words=100))\n```\n\n```{r, warning=FALSE}\nwordcloud2(data = Freq,color = \"random-dark\", backgroundColor = \"grey\",  minRotation = pi/3, maxRotation = -pi/6, minSize = 10,\n  rotateRatio = 1)\n```\n\n\n```{r, warning=FALSE}\nLyricsCloud2<- CleanLyrics%>%\n  inner_join(get_sentiments(\"bing\")) %>%\n  count(word, sentiment, sort = TRUE) %>%\n  acast(word~sentiment, value.var =\"n\", fill=0) %>%\n  comparison.cloud(colors = c(\"black\",\"green\"), max.words = 100)\n```\n\n```{r, warning=FALSE}\nggplot(data = Sent) + \n  geom_point(aes(x = song_name,\n                 y=sentiment, color = Sent$sentiment)) +\n  theme_minimal() +\n  coord_flip() +\n  theme_dark() +\n  ggtitle('Sentiment Score Comparison') + \n  scale_colour_gradient(low = \"green\", high = \"orange\") + \n  guides(color = guide_legend(title = \"Sentiment Range\")) +\n  theme(axis.text = element_text(size = 6), \n        axis.title = element_text(size = 14),\n        plot.title = element_text(size = 18, face = \"bold\")) + \n  xlab('Song Name') + \n  ylab('Sentiment')\n```\n\n```{r, warning=FALSE}\nCleanWords <- CleanLyrics %>%\ninner_join(get_sentiments(\"nrc\")) %>%\n  group_by(sentiment, word) %>%\n  count(mycount = n()) %>%\n  distinct() %>%\n  filter(sentiment %in%\n  c(\"trust\", \"joy\",\"surprise\",\"anticipation\", \"fear\", \"anger\", \"disgust\", \"sadness\"))\n\nhead(CleanLyrics)\n```\n\n```{r, warning=FALSE}\nCleanWords %>%\n  ggplot() + \n geom_bar(aes(x = sentiment), color = 'green', fill = 'purple') +\n coord_flip() + \n labs(y = \"Frequency\",\n x = \"Sentiment\") +\n theme_minimal() + \ntheme_dark() + \n  ggtitle('Frequency of Sentiment')\n\n```\n\n\n```{r, warning=FALSE}\nclean <- merge(CleanLyrics, CleanWords, by = \"word\")\n```\n\n```{r, warning=FALSE}\nSentBySong<- data.frame(table(clean$song_name, clean$sentiment))\n```\n\n```{r, warning=FALSE}\nggplot(SentBySong, aes(x = Var2, y = Freq, color = Var1), cex = 0.2) + \n        geom_point() + \n        facet_wrap(~ Var1) +\n        theme_dark() +\n        theme(text = element_text(size=5),\n        axis.text.x = element_text(angle=90, hjust=1)) +\n        guides(color = guide_legend(title = \"Song Names\")) +\n        xlab(\"Sentiment\") +\n        ylab(\"Frequency\") +\n        ggtitle(\"Frequency of Sentiment by Song\") +\n        theme(plot.title = element_text(hjust = 0.5))\n```\n\n\n```{r, warning=FALSE}\nggplot(Lyrics, aes(x= song_length_sec, y=song_name, fill = song_name)) +\n  geom_bar(stat=\"identity\") +\n  theme_dark() +\n  theme(text = element_text(size=8),\n  axis.text.x = element_text(angle=60, hjust=1)) +\n  theme(legend.position=\"none\") +\n  coord_flip() +\n  xlab(\"Song Length\") +\n  ylab(\"Song Name\") +\n  ggtitle(\"Duration of General Sentiment by Song\") +\n  theme(plot.title = element_text(hjust = 0.5))\n\n```","srcMarkdownNoYaml":"\n\n## About \nUsing data mining text mining sentiment analysis to explore the emotional impact of Rob Zombie's iconic album, Hellbilly Deluxe (1998). This album is known for its distinctive blend of horror, metal, and industrial sounds. We try to find insights into the album's influence on listener emotions. The research underscores the power of sentiment analysis in deciphering the intricate interplay between musical elements and emotional responses, providing a comprehensive understanding of the emotional dynamics evoked by this unique musical work. It is known that music affects a human’s state of emotion, but it is important to consider the level of complexity that the emotional state could represent. \n\n## Exploratory Data Analysis\n```{r, echo=FALSE, results='hide', message=FALSE, warning=FALSE}\nlibrary(tidyverse)\nlibrary(tidytext)\nlibrary('textdata')\nlibrary(\"readxl\")\nlibrary(reshape2)\nlibrary(factoextra)\nlibrary(wordcloud)\n#devtools::install_github(\"lchiffon/wordcloud2\", force=TRUE)\nlibrary(\"wordcloud2\")\nlibrary(scales)\nlibrary(topicmodels)\nlibrary(tm)\n```\n\n```{r, warning=FALSE}\nLyrics <- read_excel(\"RobZombieSheet.xlsx\")\nhead(Lyrics)\n```\n\n```{r, warning=FALSE}\nCleanLyrics <- Lyrics %>%\n  unnest_tokens(word, lyrics, token = \"words\") %>%   \n filter(!word %in% stop_words$word, str_detect(word, \"[a-z]\"))\nhead(CleanLyrics, 10)\n```\n\n```{r, warning=FALSE}\nSent <- CleanLyrics %>%\n  inner_join(get_sentiments(\"bing\")) %>%\n count(song_name, sentiment) %>%\n spread(sentiment, n, fill = 0)%>%\n mutate(sentiment = positive - negative)\nSent\n```\n\n```{r, warning=FALSE}\nFreq <- CleanLyrics %>% group_by(word) %>% \n summarise(uses = n()) %>% \n arrange(desc(uses))\nhead(Freq)\n```\n\n```{r, warning=FALSE}\nFreq %>%\n  slice(1:20) %>%\n  ggplot() + \n geom_bar(aes(x = reorder(word, uses), y = uses), stat = \"identity\", color = 'purple', fill = 'green') +\n coord_flip() + \n labs(y = \"Frequency of use\",\n x = \"Words\") +\n theme_minimal() + \ntheme_dark() + \n  ggtitle('Frequency of Words in Rob Zombie Songs')\n\n```\n\n```{r, warning=FALSE}\nLyricCloud<- CleanLyrics%>%\n  anti_join(stop_words) %>%\n  count(word) %>%\n  with(wordcloud(word, n, color = c(\"maroon\"), max.words=100))\n```\n\n```{r, warning=FALSE}\nwordcloud2(data = Freq,color = \"random-dark\", backgroundColor = \"grey\",  minRotation = pi/3, maxRotation = -pi/6, minSize = 10,\n  rotateRatio = 1)\n```\n\n\n```{r, warning=FALSE}\nLyricsCloud2<- CleanLyrics%>%\n  inner_join(get_sentiments(\"bing\")) %>%\n  count(word, sentiment, sort = TRUE) %>%\n  acast(word~sentiment, value.var =\"n\", fill=0) %>%\n  comparison.cloud(colors = c(\"black\",\"green\"), max.words = 100)\n```\n\n```{r, warning=FALSE}\nggplot(data = Sent) + \n  geom_point(aes(x = song_name,\n                 y=sentiment, color = Sent$sentiment)) +\n  theme_minimal() +\n  coord_flip() +\n  theme_dark() +\n  ggtitle('Sentiment Score Comparison') + \n  scale_colour_gradient(low = \"green\", high = \"orange\") + \n  guides(color = guide_legend(title = \"Sentiment Range\")) +\n  theme(axis.text = element_text(size = 6), \n        axis.title = element_text(size = 14),\n        plot.title = element_text(size = 18, face = \"bold\")) + \n  xlab('Song Name') + \n  ylab('Sentiment')\n```\n\n```{r, warning=FALSE}\nCleanWords <- CleanLyrics %>%\ninner_join(get_sentiments(\"nrc\")) %>%\n  group_by(sentiment, word) %>%\n  count(mycount = n()) %>%\n  distinct() %>%\n  filter(sentiment %in%\n  c(\"trust\", \"joy\",\"surprise\",\"anticipation\", \"fear\", \"anger\", \"disgust\", \"sadness\"))\n\nhead(CleanLyrics)\n```\n\n```{r, warning=FALSE}\nCleanWords %>%\n  ggplot() + \n geom_bar(aes(x = sentiment), color = 'green', fill = 'purple') +\n coord_flip() + \n labs(y = \"Frequency\",\n x = \"Sentiment\") +\n theme_minimal() + \ntheme_dark() + \n  ggtitle('Frequency of Sentiment')\n\n```\n\n\n```{r, warning=FALSE}\nclean <- merge(CleanLyrics, CleanWords, by = \"word\")\n```\n\n```{r, warning=FALSE}\nSentBySong<- data.frame(table(clean$song_name, clean$sentiment))\n```\n\n```{r, warning=FALSE}\nggplot(SentBySong, aes(x = Var2, y = Freq, color = Var1), cex = 0.2) + \n        geom_point() + \n        facet_wrap(~ Var1) +\n        theme_dark() +\n        theme(text = element_text(size=5),\n        axis.text.x = element_text(angle=90, hjust=1)) +\n        guides(color = guide_legend(title = \"Song Names\")) +\n        xlab(\"Sentiment\") +\n        ylab(\"Frequency\") +\n        ggtitle(\"Frequency of Sentiment by Song\") +\n        theme(plot.title = element_text(hjust = 0.5))\n```\n\n\n```{r, warning=FALSE}\nggplot(Lyrics, aes(x= song_length_sec, y=song_name, fill = song_name)) +\n  geom_bar(stat=\"identity\") +\n  theme_dark() +\n  theme(text = element_text(size=8),\n  axis.text.x = element_text(angle=60, hjust=1)) +\n  theme(legend.position=\"none\") +\n  coord_flip() +\n  xlab(\"Song Length\") +\n  ylab(\"Song Name\") +\n  ggtitle(\"Duration of General Sentiment by Song\") +\n  theme(plot.title = element_text(hjust = 0.5))\n\n```"},"formats":{"html":{"identifier":{"display-name":"HTML","target-format":"html","base-format":"html"},"execute":{"fig-width":7,"fig-height":5,"fig-format":"retina","fig-dpi":96,"df-print":"default","error":false,"eval":true,"cache":null,"freeze":true,"echo":true,"output":true,"warning":true,"include":true,"keep-md":false,"keep-ipynb":false,"ipynb":null,"enabled":null,"daemon":null,"daemon-restart":false,"debug":false,"ipynb-filters":[],"engine":"knitr"},"render":{"keep-tex":false,"keep-source":false,"keep-hidden":false,"prefer-html":false,"output-divs":true,"output-ext":"html","fig-align":"default","fig-pos":null,"fig-env":null,"code-fold":"none","code-overflow":"scroll","code-link":false,"code-line-numbers":false,"code-tools":false,"tbl-colwidths":"auto","merge-includes":true,"inline-includes":false,"latex-auto-mk":true,"latex-auto-install":true,"latex-clean":true,"latex-max-runs":10,"latex-makeindex":"makeindex","latex-makeindex-opts":[],"latex-tlmgr-opts":[],"latex-input-paths":[],"latex-output-dir":null,"link-external-icon":false,"link-external-newwindow":false,"self-contained-math":false,"format-resources":[],"notebook-links":true,"format-links":true},"pandoc":{"standalone":true,"wrap":"none","default-image-extension":"png","to":"html","output-file":"index.html"},"language":{"toc-title-document":"Table of contents","toc-title-website":"On this page","related-formats-title":"Other Formats","related-notebooks-title":"Notebooks","source-notebooks-prefix":"Source","section-title-abstract":"Abstract","section-title-appendices":"Appendices","section-title-footnotes":"Footnotes","section-title-references":"References","section-title-reuse":"Reuse","section-title-copyright":"Copyright","section-title-citation":"Citation","appendix-attribution-cite-as":"For attribution, please cite this work as:","appendix-attribution-bibtex":"BibTeX citation:","title-block-author-single":"Author","title-block-author-plural":"Authors","title-block-affiliation-single":"Affiliation","title-block-affiliation-plural":"Affiliations","title-block-published":"Published","title-block-modified":"Modified","callout-tip-title":"Tip","callout-note-title":"Note","callout-warning-title":"Warning","callout-important-title":"Important","callout-caution-title":"Caution","code-summary":"Code","code-tools-menu-caption":"Code","code-tools-show-all-code":"Show All Code","code-tools-hide-all-code":"Hide All Code","code-tools-view-source":"View Source","code-tools-source-code":"Source Code","code-line":"Line","code-lines":"Lines","copy-button-tooltip":"Copy to Clipboard","copy-button-tooltip-success":"Copied!","repo-action-links-edit":"Edit this page","repo-action-links-source":"View source","repo-action-links-issue":"Report an issue","back-to-top":"Back to top","search-no-results-text":"No results","search-matching-documents-text":"matching documents","search-copy-link-title":"Copy link to search","search-hide-matches-text":"Hide additional matches","search-more-match-text":"more match in this document","search-more-matches-text":"more matches in this document","search-clear-button-title":"Clear","search-detached-cancel-button-title":"Cancel","search-submit-button-title":"Submit","search":"Search","toggle-section":"Toggle section","toggle-sidebar":"Toggle sidebar navigation","toggle-dark-mode":"Toggle dark mode","toggle-reader-mode":"Toggle reader mode","toggle-navigation":"Toggle navigation","crossref-fig-title":"Figure","crossref-tbl-title":"Table","crossref-lst-title":"Listing","crossref-thm-title":"Theorem","crossref-lem-title":"Lemma","crossref-cor-title":"Corollary","crossref-prp-title":"Proposition","crossref-cnj-title":"Conjecture","crossref-def-title":"Definition","crossref-exm-title":"Example","crossref-exr-title":"Exercise","crossref-ch-prefix":"Chapter","crossref-apx-prefix":"Appendix","crossref-sec-prefix":"Section","crossref-eq-prefix":"Equation","crossref-lof-title":"List of Figures","crossref-lot-title":"List of Tables","crossref-lol-title":"List of Listings","environment-proof-title":"Proof","environment-remark-title":"Remark","environment-solution-title":"Solution","listing-page-order-by":"Order By","listing-page-order-by-default":"Default","listing-page-order-by-date-asc":"Oldest","listing-page-order-by-date-desc":"Newest","listing-page-order-by-number-desc":"High to Low","listing-page-order-by-number-asc":"Low to High","listing-page-field-date":"Date","listing-page-field-title":"Title","listing-page-field-description":"Description","listing-page-field-author":"Author","listing-page-field-filename":"File Name","listing-page-field-filemodified":"Modified","listing-page-field-subtitle":"Subtitle","listing-page-field-readingtime":"Reading Time","listing-page-field-categories":"Categories","listing-page-minutes-compact":"{0} min","listing-page-category-all":"All","listing-page-no-matches":"No matching items"},"metadata":{"lang":"en","fig-responsive":true,"quarto-version":"1.3.306","theme":{"light":["flatly","light.scss"],"dark":["darkly","dark.scss"]},"title-block-banner":true,"title":"Data Mining Text Mining Adventure","author":"Valentina Colorado, Alexandra Desaulniers","date":"2024-01-10","categories":["class","code","analysis","DMTM","R"],"image":"https://upload.wikimedia.org/wikipedia/en/8/8b/Hellbilly_Deluxe.jpg","description":"Using data mining text mining sentiment analysis to explore the emotional impact of Rob Zombie's iconic album, Hellbilly Deluxe (1998)."},"extensions":{"book":{"multiFile":true}}}},"projectFormats":["html"]}